diff --git a/mypy/private/mypy.bzl b/mypy/private/mypy.bzl
index c35187b..098c3ed 100644
--- a/mypy/private/mypy.bzl
+++ b/mypy/private/mypy.bzl
@@ -94,6 +94,7 @@ def _mypy_impl(target, ctx):
     depsets = []
 
     type_mapping = dict(zip([k.label for k in ctx.attr._types_keys], ctx.attr._types_values))
+    dep_with_stubs = [_.label.workspace_root + "/site-packages" for _ in ctx.attr._types_keys]
     additional_types = [
         type_mapping[dep.label]
         for dep in ctx.rule.attr.deps
@@ -105,19 +106,18 @@ def _mypy_impl(target, ctx):
 
     for dep in (ctx.rule.attr.deps + additional_types):
         depsets.append(dep.default_runfiles.files)
-
         if PyTypeLibraryInfo in dep:
             types.append(dep[PyTypeLibraryInfo].directory.path + "/site-packages")
+        elif dep.label in type_mapping:
+            continue
         elif dep.label.workspace_root.startswith("external/"):
             # TODO: do we need this, still?
             external_deps[dep.label.workspace_root + "/site-packages"] = 1
 
-            external_deps |= {
-                "external/{}".format(x): 1
-                for x in _imports(dep)
-                if "mypy_extensions" not in x and
-                   "typing_extensions" not in x
-            }
+            for imp in [_ for _ in _imports(dep) if "mypy_extensions" not in _ and "typing_extensions" not in _]:
+                path = "external/{}".format(imp)
+                if path not in dep_with_stubs:
+                    external_deps[path] = 1
         elif dep.label.workspace_name == "":
             for import_ in _extract_imports(dep):
                 imports_dirs[import_] = 1
